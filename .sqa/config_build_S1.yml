config:
  deploy_template: '.sqa/docker-compose-build-S1.yml'
  project_repos:
    onedatasim:
      repo: 'https://github.com/EOSC-synergy/onedataSim'
      branch: 'dev'
  credentials:
    # not necessary with pre-uploaded docker-images with corsika
    #- id: onedata-token-build-ajrm
    #  variable: TOKEN_BUILD
    # TOKEN_RUN is needed for testing the application
    - id: onedata-token-test8-ajrm
      variable: TOKEN_RUN
    - id: onedata-token-publish-ajrm
      variable: TOKEN_PUBLISH
    # If we will want a private DockerHub
    - id: repoimage-lago-ajrm
      username_var: JPL_DOCKERUSER
      password_var: JPL_DOCKERPASS
environment:
  # first testing with eoscsynergybot account in dockerhub (synergy_dockerhub_bot_pass)
  #JPL_DOCKERSERVER: "hub.docker.com"
  JPL_DOCKERPUSH: onedatasim-s1
  JPL_DOCKERFORCEBUILD: "True"
# #  LANG: C.UTF-8
sqa_criteria:
  qc_functional:
    repos:
      onedatasim:
        # we need a complete build to test simulations
        container: onedatasim-s1
        # environment:
          # - ONECLIENT_ACCESS_TOKEN=${TOKEN_RUN}
          # - ONECLIENT_PROVIDER_HOST="ceta-ciemat-02.datahub.egi.eu"
        # estos comandos son "exec" contra un container ya levantado con docker-compose -f build...yml
        commands:
          - pwd
          - whoami
          - git --git-dir /opt/onedataSim/.git rev-parse --verify HEAD 
          # - bash -lc "export"
          # - bash -lc "do_sims_onedata.py -?"
          - ls -alh /mnt/datahub.egi.eu
          # simulation 5 secs
          - >
            env ONECLIENT_ACCESS_TOKEN=${TOKEN_RUN} 
            env ONECLIENT_PROVIDER_HOST="ceta-ciemat-02.datahub.egi.eu" 
            bash -lc 'ls -alh /mnt/datahub.egi.eu; ls -alh /mnt/datahub.egi.eu/test8;
            ls -alh /mnt/datahub.egi.eu/test8/SQaaS;
            do_showers_onedata.py -o /mnt/datahub.egi.eu/test8/SQaaS/S0_and_30_200.0_77402_QGSII_flat_defaults
            -u 0000-0001-6497-753X --onedata_path /mnt/datahub.egi.eu/test8/SQaaS/ -j 2' 
          # enricher and publish currently deactivated (not planified during EOSC-Synergy) 
          #- unittest   
  qc_coverage:
    repos:
      onedatasim:
        container: onedatasim-s1
        commands:
          - >
            env ONECLIENT_ACCESS_TOKEN=${TOKEN_RUN}
            env ONECLIENT_PROVIDER_HOST="ceta-ciemat-02.datahub.egi.eu"
            #pip install coverage && coverage run -m unittest discover -s /opt/onedataSim 
            pip3 install coverage && python3 -m coverage run -m unittest discover -s /opt/onedataSim
          #- cover
  qc_security:
    repos:
      onedatasim:
         # we need testing security of unittests..., not only with plain code.    
        container: onedatasim-s1
        commands:
          - >
            env ONECLIENT_ACCESS_TOKEN=${TOKEN_RUN}
            env ONECLIENT_PROVIDER_HOST="ceta-ciemat-02.datahub.egi.eu"
            #bandit -r /opt/onedataSim -x tests -s B404,B602,B603
            pip3 install bandit && python3 -m bandit -r /opt/onedataSim -x tests -s B404,B602,B603
          #- bandit -r /onedatasim-repo -x tests
#  qc_fair: # it is not defined yet in JePL library, we have to use qc_doc
#  currently deactivated for S1 building (not planified during EOSC-Synergy) 
#  qc_doc:
#    repos:
#      FAIR_EVAL:
#        container: fair_eva
#        commands:
#      FAIR_UJI:
#        container: fair_uji
#        commands:
#timeout: 900
